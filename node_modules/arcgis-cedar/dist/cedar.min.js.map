{"version":3,"file":null,"sources":["../src/utils/utils.js","../src/utils/spec.js","../src/utils/request.js","../src/cedar.js"],"sourcesContent":["import * as d3 from 'd3';\n/**\n * Merges n objects\n * @param  {object} source Empty object that other objects will be merged into\n * @return {Object}        Merged objects\n */\nexport function mixin (source) {\n  const args = [...arguments];\n  for (let i = 1; i < args.length; i++) {\n    d3.entries(args[i]).forEach((p) => {\n      source[p.key] = p.value;\n    });\n  }\n  return source;\n}\n\n/**\n * Recursively merge properties of two objects\n */\nexport function mergeRecursive (obj1, obj2) {\n  for (let p in obj2) {\n    if (obj2.hasOwnProperty(p)) {\n      try {\n        // Property in destination object set; update its value.\n        if (obj2[p].constructor === Object || obj2[p].constructor === Array) {\n          obj1[p] = mergeRecursive(obj1[p], obj2[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      } catch (e) {\n        // Property in destination object not set; create it and set its value\n        obj1[p] = obj2[p];\n      }\n    }\n  }\n  return obj1;\n}\n\n/**\n * Token replacement on a string\n * @param  {string} template string template\n * @param  {object} params   Object hash that maps to the tokens to be replaced\n * @return {string}          string with values replaced\n */\nexport function supplant (template, params) {\n  const t = template.replace(/{([^{}]*)}/g,\n    (a, b) => {\n      const r = getTokenValue(params, b);\n\n      return typeof r === 'string' || typeof r === 'number' ? r : a;\n    }\n  );\n  return t.replace(/\"{([^{}]*)}\"/g,\n    (a, b) => {\n      let r = getTokenValue(params, b);\n      return (!!r && r.constructor === Array) ? JSON.stringify(r) : a;\n    });\n}\n\n/**\n  * Get the value of a token from a hash\n  * @param  {object} tokens    Hash {a: 'a', b: { c: 'c'} }\n  * @param  {string} tokenName Property name: 'a' would yield 'a', 'b.c' would yield 'c'\n  * @return {Any}           Returns value contained within property\n  * Pulled from gulp-token-replace (MIT license)\n  * https://github.com/Pictela/gulp-token-replace/blob/master/index.js\n */\nexport function getTokenValue (tokens, tokenName) {\n  let tmpTokens = tokens;\n  let tokenNameParts = tokenName.split('.');\n  for (let i = 0; i < tokenNameParts.length; i++) {\n    if (tmpTokens.hasOwnProperty(tokenNameParts[i])) {\n      tmpTokens = tmpTokens[tokenNameParts[i]];\n    } else {\n      return null;\n    }\n  }\n  return tmpTokens;\n}\n\n /**\n  * Helper function that validates that the\n  * mappings hash contains values for all\n  * the inputs\n  * @param  {array} inputs   Array of inputs\n  * @param  {object} mappings Hash of mappings\n  * @return {array}          Missing mappings\n  * @access private\n  */\nexport function validateMappings (inputs, mappings) {\n  return inputs.filter((input) => {\n    if (input.required && !mappings[input.name]) {\n      return input;\n    }\n  });\n}\n\n /**\n  * Validate that the incoming data has the fields expected\n  * in the mappings\n  * @access private\n  */\nexport function validateData (data, mappings) {\n  const missingInputs = [];\n  if (!data.features || !Array.isArray(data.features)) {\n    throw new Error('Data is expected to have features array!');\n  }\n  const firstRow = data.features[0].attributes;\n  for (let key in mappings) {\n    if (mappings.hasOwnProperty(key)) {\n      let fld = getMappingFieldName(key, mappings[key].field);\n      if (!firstRow.hasOwnProperty(fld)) {\n        missingInputs.push(fld);\n      }\n    }\n  }\n  return missingInputs;\n}\n\n /**\n  * TODO does nothing, must figure out.\n  * Centralize and abstract the computation of\n  * expected field names, based on the mapping name\n  * @access private\n  */\nexport function getMappingFieldName (mappingName, fieldName) {\n  // this function why?\n\n  let name = fieldName;\n   // if(mappingName.toLowerCase() === 'count'){\n   //  name = fieldName + '_SUM';\n   // }\n  return name;\n}\n\nconst utils = {\n  mixin,\n  supplant,\n  mergeRecursive,\n  getTokenValue,\n  validateMappings,\n  validateData,\n  getMappingFieldName\n};\n\nexport default utils;\n","/**\n * Return a default definition Object\n * @return {Object} Default definition\n */\nexport function defaultDefinition () {\n  return {\n    dataset: {\n      query: defaultQuery()\n    },\n    template: {}\n  };\n}\n\n/**\n * Return AGO query defaults\n * @return {Object} Default query\n */\nexport function defaultQuery () {\n  return {\n    where: '1=1',\n    returnGeometry: false,\n    returnDistinctValues: false,\n    returnIdsOnly: false,\n    returnCountOnly: false,\n    outFields: '*',\n    sqlFormat: 'standard',\n    f: 'json'\n  };\n}\n\n/**\n * Ensure that all required inputs exist in mappings\n * @param  {object} mappings Mappings object\n * @param  {array} inputs   Array of inputs in specification\n * @return {object}          Returns mappings\n */\nexport function applyDefaultsToMappings (mappings, inputs) {\n  const errs = [];\n  // iterate over inputs\n  for (let i = 0; i < inputs.length; i++) {\n    const input = inputs[i];\n\n    // If required but not there\n    if (input.required && !mappings[input.name]) {\n      errs.push(input.name);\n    }\n\n    // if it's not required, has a default and not in the mappings\n    if (!input.required && !mappings[input.name] && input['default']) {\n      // add the default\n      mappings[input.name] = input['default'];\n    }\n  }\n  if (errs.length > 0) {\n    throw new Error(`Required Mappings Missing: ${errs.join(',')}`);\n  } else {\n    return mappings;\n  }\n}\n\nconst specUtils = {\n  defaultDefinition,\n  defaultQuery,\n  applyDefaultsToMappings\n};\n\nexport default specUtils;\n","import * as d3 from 'd3';\nimport { mixin } from './utils';\nimport { defaultQuery } from './spec';\n\n/**\n * Takes in params, iterates over them, encodes and returns stringified and encoded query\n *\n * @param {object} params - merged default and user defined parameters\n *\n * @returns {string} - stringified and encoded query\n */\nfunction serializeQueryParams (params) {\n  const str = [];\n  for (const param in params) {\n    if (params.hasOwnProperty(param)) {\n      let val = params[param];\n      if (typeof val !== 'string') {\n        val = JSON.stringify(val);\n      }\n      str.push(`${encodeURIComponent(param)}=${encodeURIComponent(val)}`);\n    }\n  }\n  const queryString = str.join('&');\n  return queryString;\n}\n\n/**\n * Helper function to request JSON from a url\n * @param  {string}   url      URL to request from\n * @param  {Function} callback Callback function\n * @param  {number}   timeout  Timeout on request\n * @return {object}            Response object\n */\nexport function getJson (url, callback, timeout) {\n  const cb = (err, data) => {\n    // if timeout error then return a timeout error\n    if (err && err.response === '') {\n      callback(new Error('This service is taking too long to respond, unable to chart'));\n    } else if (err) {\n      // Other errors return generic error.\n      callback(new Error(`Error loading ${url} with a response of: ${err.message}`));\n    } else {\n      callback(null, JSON.parse(data.responseText));\n    }\n  };\n  if (url.length > 2000) {\n    const uri = url.split('?');\n    d3.xhr(uri[0])\n      .on('beforesend', (xhr) => { xhr.timeout = timeout; xhr.ontimeout = xhr.onload; })\n      .header('Content-Type', 'application/x-www-form-urlencoded')\n      .post(uri[1], cb);\n  } else {\n    d3.xhr(url)\n      .on('beforesend', (xhr) => { xhr.timeout = timeout; xhr.ontimeout = xhr.onload; })\n      .get(cb);\n  }\n}\n\n/**\n * Given a dataset hash create a feature service request\n * @param  {object} dataset       Dataset object\n * @param  {object} queryFromSpec Query passed in by the user\n * @return {string}               url string\n */\nexport function createFeatureServiceRequest (dataset, queryFromSpec) {\n  const mergedQuery = mixin({}, defaultQuery(), queryFromSpec);\n\n  // Handle bbox\n  if (mergedQuery.bbox) {\n    // make sure a geometry was not also passed in\n    if (mergedQuery.geometry) {\n      throw new Error('Dataset.query can not have both a geometry and a bbox specified');\n    }\n    // Get the bbox (w,s,e,n)\n    const bboxArr = mergedQuery.bbox.split(',');\n\n    // Remove it so it's not serialized as-is\n    delete mergedQuery.bbox;\n\n    // cook it into a json string\n    mergedQuery.geometry = JSON.stringify({\n      xmin: bboxArr[0],\n      ymin: bboxArr[2],\n      xmax: bboxArr[1],\n      ymax: bboxArr[3]\n    });\n    // set spatial ref as geographic\n    mergedQuery.inSR = '4326';\n  }\n\n  if (!mergedQuery.groupByFieldsForStatistics && !!dataset.mappings.group) {\n    mergedQuery.groupByFieldsForStatistics = dataset.mappings.group.field;\n  }\n  if (!mergedQuery.outStatistics && !!dataset.mappings.count) {\n    // TODO Why are we explicitlystating _SUM as a stats type?\n    mergedQuery.orderByFields = `${dataset.mappings.count.field}_SUM`;\n    mergedQuery.outStatistics = JSON.stringify([{\n      statisticType: 'sum',\n      onStatisticField: dataset.mappings.count.field,\n      outStatisticFieldName: `${dataset.mappings.count.field}_SUM`\n    }]);\n  }\n\n    // iterate the mappings keys to check for sort\n    // -----------------------------------------------------------------\n    // This approach would seem 'clean' but if there are multiple fields\n    // to sort by, the order would be determined by how javascript decides to\n    // iterate the mappings property hash.\n    // Thus, using mappings.sort gives the developer explicit control\n    // -----------------------------------------------------------------\n    // var sort = [];\n    // for (var property in dataset.mappings) {\n    //   if (dataset.mappings.hasOwnProperty(property)) {\n    //     if(dataset.mappings[property].sort){\n    //       //ok - build up the sort\n    //       sort.push(dataset.mappings[property].field + ' ' + dataset.mappings[property].sort);\n    //     }\n    //   }\n    // }\n    // if(sort.length > 0){\n    //   mergedQuery.orderByFields = sort.join(',');\n    // }\n    // -----------------------------------------------------------------\n    // check for a sort passed directly in\n\n  if (dataset.mappings.sort) {\n    mergedQuery.orderByFields = dataset.mappings.sort;\n  }\n\n  let url = `${dataset.url}/query?${serializeQueryParams(mergedQuery)}`;\n\n  if (dataset.token) {\n    url = `${url}&token=${dataset.token}`;\n  }\n\n  return url;\n}\n\nconst requestUtils = {\n  getJson,\n  createFeatureServiceRequest\n};\n\nexport default requestUtils;\n","import { version } from '../package.json';\nimport utils from './utils/utils';\nimport requestUtils from './utils/request';\nimport specUtils from './utils/spec';\n// import specTemplates from './charts/specs';\nimport * as d3 from 'd3';\nimport * as vg from 'vega';\n\n// get cedar root URL for loading chart specs\nconst baseUrl = (function () {\n  var cdnProtocol = 'http:';\n  var cdnUrl = '//esri.github.io/cedar/js';\n  var src;\n  if (window && window.document) {\n    src = (window.document.currentScript && window.document.currentScript.src);\n    if (src) {\n      // real browser, get base url from current script\n      return src.substr(0, src.lastIndexOf('/'));\n    } else {\n      // ie, set base url to CDN\n      // NOTE: could fallback to CDN only if can't find any scripts named cedar\n      return (window.document.location ? window.document.location.protocol : cdnProtocol) + cdnUrl;\n    }\n  } else {\n    // node, set base url to CDN\n    return cdnProtocol + cdnUrl;\n  }\n})();\n\nexport default class Cedar {\n  /**\n   * Creates a new Chart object.\n   *\n   * @example\n   *  var chart = new Cedar({\n   *    \"type\": \"bar\"\n   *    \"dataset\":\n   *      \"url\":\"http://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Education_WebMercator/MapServer/5\",\n   *      \"query\": {\n   *        \"groupByFieldsForStatistics\": \"FACUSE\",\n   *        \"outStatistics\": [{\n   *          \"statisticType\": \"sum\",\n   *          \"onStatisticField\": \"TOTAL_STUD\",\n   *          \"outStatisticFieldName\": \"TOTAL_STUD_SUM\"\n   *        }]\n   *      },\n   *      \"mappings\":{\n   *        \"sort\": \"TOTAL_STUD_SUM DESC\",\n   *        \"x\": {\"field\":\"FACUSE\",\"label\":\"Facility Use\"},\n   *        \"y\": {\"field\":\"TOTAL_STUD_SUM\",\"label\":\"Total Students\"}\n   *      }\n   *    }\n   *  });\n   *\n   * @param {Object} options\n   * @param {String} options.type - Chart type as a chartType (\"bar\") or a URL to a Cedar specification\n   * @param {Object} options.dataset - Dataset definition including Source and Style mappings\n   * @param {String} options.dataset.url - GeoService Layer URL\n   *\n   * \"url\":\"http://.../rest/services/DATA/Education/MapServer/5\"\n   * @param {Object} options.dataset.query - GeoServices Layer query parameters (where, bbox, outStatistics) [optional]\n   *\n   * \"query\": {\n   *   \"groupByFieldsForStatistics\": \"FACUSE\",\n   *   \"outStatistics\": [{\n   *     \"statisticType\": \"sum\",\n   *     \"onStatisticField\": \"TOTAL_STUD\",\n   *     \"outStatisticFieldName\": \"TOTAL_STUD_SUM\" }] }\n   * @param {Object} options.dataset.data - Inline feature collection, alternative to data from a URL\n   *\n   * \"data\": {\"features\":[{\"attributes\":{\"ZIP_CODE\":20005,\"TOTAL_STUD_SUM\":327}}]}\n   * @param {Object} options.dataset.mappings - Relates data items to the chart style definition\n   * @param {Object} options.override - Changes to the \"options.type\" chart specification\n   * @param {Object} options.tooltip - Optional on-hover tooltip. Element has class=\"cedar-tooltip\" for styling.\n   * @param {String} options.tooltip.id - Optional HTML element to use for tooltip. (default: unique id created)\n   * @param {String} options.tooltip.title - Templated tooltip heading. Uses \"{Variable} template format\"\n   * @param {String} options.tooltip.content - Templated tooltip body text. Uses \"{Variable} template format\"\n   * @return {Object} new Cedar chart object\n   */\n  constructor (options) {\n    this.version = version;\n    // Pull templates in\n    // this.chartTypes = specTemplates;\n\n    let opts = options || {};\n\n    let spec;\n\n    this.baseUrl = baseUrl;\n    this.chartTypes = ['bar', 'bar-horizontal', 'bubble', 'grouped', 'pie', 'scatter', 'sparkline', 'time', 'time-trendline'];\n\n    // Cedar configs such as size..\n    this.width = undefined;\n    this.height = undefined;\n    this.autolabels = true;\n    this.maxLabelLength = undefined;\n\n    // Array to hold event handlers\n    this._events = [];\n\n    // initialize internal definition\n    this._definition = specUtils.defaultDefinition();\n\n    // initialize vega view aka chart\n    this._view = undefined;\n\n    // the vega tooltip\n    this._tooltip = undefined;\n\n    // transform function\n    this._transform = undefined;\n\n    // Queue to hold methods called while xhrs are in progress\n    this._methodQueue = [];\n\n    // Set a base timeout\n    this._timeout = undefined;\n\n    // override the base timeout\n    if (opts.timeout) {\n      this._timeout = opts.timeout;\n    }\n\n    // override the base url\n    if (opts.baseUrl) {\n      this.baseUrl = opts.baseUrl;\n    }\n\n    /**\n     * Flag used to determine if the library is waiting for an xhr to return.\n     * @access private\n     */\n    this._pendingXhr = false;\n\n    /**\n     * Definition\n     */\n\n    if (opts.definition) {\n      if (typeof opts.definition === 'object') {\n        // hold onto the definition\n        this._definition = opts.definition;\n      } else if (typeof opts.definition === 'string') {\n        // assume it's a url (relative or absolute) and fetch the def object\n        this._pendingXhr = true;\n        requestUtils.getJson(opts.definition, (err, data) => {\n          if (err) {\n            throw new Error('Error fetching definition object', err);\n          }\n          this._pendingXhr = false;\n          this._definition = data;\n          this._purgeMethodQueue();\n        }, this._timeout);\n      } else {\n        throw new Error('parameter definition must be an object or string (url)');\n      }\n    }\n\n    // if there are overrides\n    if (opts.override) {\n      this._definition.override = opts.override;\n    }\n\n    /**\n     * Specs\n     */\n\n    // first, check for pre-defined chart type passed in as 'type'\n    spec = this._getSpecificationUrl(opts.type);\n\n    // If url or object passed use that...\n    if (opts.specification) {\n      spec = opts.specification;\n    }\n\n    if (spec) {\n      // is it an object or string, assumed to be url\n      if (typeof spec === 'object') {\n        // hold onto the template\n        this._definition.specification = spec;\n      } else if (typeof spec === 'string') {\n        // assume it's a url (rel or abs) and fetch the template object\n        this._pendingXhr = true;\n        this._pendingXhr = true;\n        requestUtils.getJson(spec, (err, data) => {\n          if (err) {\n            throw new Error('Error fetching template object', err);\n          }\n          this._pendingXhr = false;\n          this._definition.specification = data;\n          this._purgeMethodQueue();\n        }, this._timeout);\n      } else {\n        throw new Error('parameter specification must be an object or string (url)');\n      }\n    }\n\n    // Allow a dataset to be passed in....\n    if (opts.dataset && typeof opts.dataset === 'object') {\n      opts.dataset.query = utils.mixin({}, specUtils.defaultQuery(), opts.dataset.query);\n      // Assign it\n      this._definition.dataset = opts.dataset;\n    }\n\n    /**\n     * Tooltip\n     */\n    // allow a tooltip to be passed in...\n    if (opts.tooltip && typeof opts.tooltip === 'object') {\n      this.tooltip = opts.tooltip;\n    } else {\n      // Build a default tooltip based on first two imputs....\n      const inputs = [];\n      for (let input in this._definition.dataset.mappings) {\n        if (this._definition.dataset.mappings.hasOwnProperty(input)) {\n          const field = this._definition.dataset.mappings[input].field;\n          if (field !== undefined && field !== null) {\n            inputs.push(field);\n          }\n        }\n      }\n      if (inputs.length >= 2) {\n        this.tooltip = {\n          'title': `{${inputs[0]}}`,\n          'content': `{${inputs[1]}}`\n        };\n      }\n    }\n\n    /**\n     * tranform\n     */\n    // Allow a transform func to pass in\n    if (opts.transform && typeof opts.transform === 'function') {\n      this._transform = opts.transform;\n    }\n  }\n\n  /**\n   * Properties\n   */\n  // Datasets\n  get dataset () {\n    return this._definition.dataset;\n  }\n  set dataset (val) {\n    this._definition.dataset = val;\n  }\n\n  // Specification\n  get specification () {\n    return this._definition.specification;\n  }\n  set specification (val) {\n    this._definition.specification = val;\n  }\n\n  // override\n  get override () {\n    return this._definition.override;\n  }\n  set override (val) {\n    this._definition.override = val;\n    // return this.update(); // TODO is this the best way?\n  }\n\n  // Tooltip\n  get tooltip () {\n    return this._definition.tooltip;\n  }\n  set tooltip (val) {\n    this._definition.tooltip = val;\n    if (this._definition.tooltip.id === undefined || this._definition.tooltip.id === null) {\n      this._definition.tooltip.id = `cedar-${Date.now()}`;\n    }\n  }\n\n  // transform\n  get transform () {\n    return this._transform;\n  }\n  set transform (val) {\n    this._transform = val;\n  }\n\n  _getSpecificationUrl (spec) {\n    if (this.chartTypes.indexOf(spec) !== -1) {\n      spec = `${this.baseUrl}/charts/${this.chartTypes[this.chartTypes.indexOf(spec)]}.json`;\n    }\n    return spec;\n  }\n\n  /**\n   * Inspect the current state of the Object\n   * and determine if we have sufficient information\n   * to render the chart\n   * @return {object} Hash of the draw state + any missing requirements\n   */\n  canDraw () {\n    // dataset?\n    // dataset.url || dataset.data?\n    // dataset.mappings?\n    // specification?\n    // specification.template?\n    // specification.inputs?\n    // specification.inputs ~ dataset.mappings?\n\n    return {drawable: true, errs: []};\n  }\n\n  /**\n   * Draw the chart into the DOM element\n   *\n   * @example\n   *\n   * var chart = new Cedar({\n   *   \"type\": \"scatter\",\n   *   \"dataset\":{\n   *     \"url\":\"http://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Education_WebMercator/MapServer/5\",\n   *     \"query\":{},\n   *     \"mappings\":{\n   *       \"x\": {\"field\":\"POPULATION_ENROLLED_2008\",\"label\":\"Enrolment 2008\"},\n   *       \"y\": {\"field\":\"SQUARE_FOOTAGE\",\"label\":\"Square Footage\"},\n   *       \"color\":{\"field\":\"FACUSE\",\"label\":\"Facility Type\"}\n   *     }\n   *   }\n   * });\n   *\n   * chart.show({\n   *   elementId: \"#chart\"\n   * });\n   *\n   * @param  {object} options\n   * @param {String} options.elementId [required] Id of the Dom element into which the chart will be rendered\n   * @param {String} options.renderer \"canvas\" or \"svg\" (default: `svg`)\n   * @param {Boolean} options.autolabels place axis labels outside any tick labels (default: false)\n   * @param {String} options.token Token to be used if the data or spec are on a secured server\n   */\n  show (options, clb) {\n    if (this._pendingXhr) {\n      // TODO addToMethodQueue\n      this._addToMethodQueue('show', [options, clb]);\n    } else {\n      let err;\n      // ensure we got an elementId\n      if (!options.elementId) {\n        err = 'Cedar.show requires options.elementId';\n      }\n      // Check if element exists in the page\n      if (d3.select(options.elementId)[0][0] === null) {\n        err = `Element ${options.elementId} is not present in the DOM`;\n      }\n\n      // hold onto the id\n      this._elementId = options.elementId;\n      this._renderer = options.renderer || 'svg'; // default to svg\n      this.width = options.width || this.height;\n      this.height = options.height || this.height;\n      if (options.autolabels !== undefined && options.autolabels !== null) {\n        this.autolabels = options.autolabels;\n      }\n\n      if (options.maxLabelLength) {\n        // check if truncate label length has been passed in\n        this.maxLabelLength = options.maxLabelLength;\n      }\n\n      // hold onto the token\n      if (options.token) {\n        this._token = options.token;\n      }\n\n      if (err) {\n        throw new Error(err);\n      }\n\n      var chk = this.canDraw();\n\n      if (chk.drawable) {\n        this.update(clb);\n      } else {\n        // report the issues\n        const errs = chk.issues.join(',');\n        throw new Error(`Chart can not be drawn because: ${errs}`);\n      }\n    }\n  }\n\n  /**\n   * Draw the chart based on any changes to data or specifications\n   * Should be called after a user modifies\n   * the dataset, query, mappings, chart specification or element size\n   *\n   * @example\n   * dataset = {\"url\": \"...\", \"mappings\": {\"x\": {\"field\": \"STATE\"}, \"y\": {\"field\": \"POPULATION\"}}};\n   * chart = new Cedar({ \"type\": \"bar\", \"dataset\": dataset });\n   * chart.show({elementId: \"#chart\"});\n   * chart.dataset.query.where = \"POPULATION>30000\";\n   * chart.update();\n   */\n  update (clb) {\n    if (this._view) {\n      this.emit('update-start');\n    }\n\n    if (this._pendingXhr) {\n      this._addToMethodQueue('update');\n    } else {\n      if (this._view) {\n        // remove handlers\n        // TODO Remove existing handlers\n        this._remove(this._view);\n      }\n\n      try {\n        // Creates the HTML Div and styling if not already created\n        if (this._definition.tooltip) {\n          this._createTooltip(this._definition.tooltip.id);\n        }\n\n        // Ensure we have required inputs or defaults\n        let compiledMappings = specUtils.applyDefaultsToMappings(this._definition.dataset.mappings, this._definition.specification.inputs);\n\n        let queryFromSpec = utils.mixin({}, this._definition.specification.query, this._definition.dataset.query);\n        queryFromSpec = JSON.parse(utils.supplant(JSON.stringify(queryFromSpec), compiledMappings));\n\n        // allow binding to query properties\n        compiledMappings.query = queryFromSpec;\n\n        // compile the template + mappings --> vega spec\n        let spec = JSON.parse(utils.supplant(JSON.stringify(this._definition.specification.template), compiledMappings));\n\n        // merge in user specified style overrides\n        spec = utils.mergeRecursive(spec, this._definition.override);\n\n        // if the spec has a url in the data node, delete it TODO: need to readress this.\n        if (spec.data[0].url) {\n          delete spec.data[0].url;\n        }\n\n        if (this._definition.dataset.data) {\n          // create the data node using the passed in data\n          spec.data[0].values = this._definition.dataset.data; // TODO: only works on first spec, need to address for multiple datasets.\n\n          // Send to vega\n          this._renderSpec(spec, clb);\n        } else {\n          // We need to fetch the data so....\n          const url = requestUtils.createFeatureServiceRequest(this._definition.dataset, queryFromSpec);\n\n          // create a callback closure to carry the spec\n          const cb = (err, data) => {\n            // Normalize error response\n            if (!err && !!data.error) {\n              err = new Error(data.error.message || data.error.details[0]);\n            }\n            // if no errors then continue...\n            if (!err) {\n              if (this._transform && typeof this._transform === 'function') {\n                data = this._transform(data, this._definition.dataset);\n              }\n              // TODO add error handlers for xhr and AGS errors.\n              spec.data[0].values = data;\n              // send to vega\n              this._renderSpec(spec, clb);\n            } else {\n              // optional callback\n              if (!!clb && typeof clb === 'function') {\n                clb(err, data);\n              }\n            }\n          };\n\n          // fetch the data from the service\n          requestUtils.getJson(url, cb, this._timeout);\n        }\n      } catch (ex) {\n        throw (ex);\n      }\n    }\n  }\n\n  /**\n   * RENDER CHART FUNCTIONS\n   *\n   *\n   * Render a compiled Vega specification using vega runtime\n   */\n\n  _renderSpec (spec, clb) {\n    if (this.autolabels === true) {\n      spec = this._placeLabels(spec);\n      spec = this._placeaAxisTicks(spec);\n    }\n    // Use vega to parse the spec\n    // It will handle the spec as an object or url\n    vg.parse.spec(spec, (err, chartCtor) => {\n      // create the view\n      this._view = chartCtor({\n        el: this._elementId,\n        renderer: this._renderer\n      });\n\n      const width = this.width || parseInt(d3.select(this._elementId).style('width'), 10) || 500;\n      const height = this.height || parseInt(d3.select(this._elementId).style('height'), 10) || 500;\n\n      // render into the element\n      this._view.width(width).height(height).update();\n\n      // attach event proxies\n      this._attach(this._view);\n\n      if (this._view) {\n        this.emit('update-end');\n      }\n\n      // expose errors\n      if (!!clb && typeof clb === 'function') {\n        clb(err, spec);\n      }\n    });\n  }\n\n  /**\n   * AXIS TICK FUNCTIONS START HERE\n   *\n   *\n   * Automatically determines axis title placement\n   *\n   * Calculates the maximum length of a tick label and adds padding\n   */\n\n  _placeLabels (spec) {\n    try {\n      const fields = {};\n      const lengths = {};\n      const inputs = [];\n      // Get all inputs that may be axes\n      for (let input in this._definition.dataset.mappings) {\n        // check also if property is not inherited from prototype\n        if (this._definition.dataset.mappings.hasOwnProperty(input)) {\n          const field = this._definition.dataset.mappings[input].field;\n          if (field) {\n            inputs.push(input);\n            fields[input] = field;\n            lengths[input] = 0;\n          }\n        }\n      }\n      let length = 0;\n\n      // find the max length value for each axis\n      spec.data[0].values.features.forEach((feature) => {\n        inputs.forEach((axis) => {\n          length = (feature.attributes[fields[axis]] || '').toString().length;\n          if (this.maxLabelLength) {\n            // Need to make sure that the gap between title and labels isn't ridiculous\n            length = length < (this.maxLabelLength + 1) ? length : this.maxLabelLength;\n          }\n          if (length > lengths[axis]) {\n            lengths[axis] = length;\n          }\n        });\n      });\n\n      // Change each axis title offset based on longest value\n      inputs.forEach((axis, index) => {\n        let angle = 0;\n        if (!!spec.axes && !!spec.axes[index]) {\n          if (spec.axes[index].properties.labels.angle) {\n            angle = spec.axes[index].properties.labels.angle.value;\n          }\n          if (spec.axes[index].type === 'y') {\n            angle = 100 - angle;\n          }\n          if (this.maxLabelLength) {\n            // Set max length of axes titles\n            spec.axes[index].properties.labels.text = {'template': `{{ datum.data | truncate:\"${this.maxLabelLength}\"}}`};\n          }\n          // set title offset\n          spec.axes[index].titleOffset = Math.abs(lengths[axis] * angle / 100 * 8) + 35;\n        }\n      });\n      return spec;\n    } catch (ex) {\n      throw (ex);\n    }\n  }\n\n  /**\n   * Automatically determines number of axis tick marks\n   *\n   * Calculates the maximum length of a tick label and adds padding\n   * TODO: remove expectation that there are both x,y axes\n   */\n\n  _placeaAxisTicks (spec) {\n    if (spec.axes) {\n      try {\n        const width = this.width || parseInt(d3.select(this._elementId).style('width'), 10) || 500;\n        const height = this.height || parseInt(d3.select(this._elementId).style('height'), 10) || 500;\n\n        spec.axes[0].ticks = width / 100;\n        if (spec.axes[1]) {\n          spec.axes[1].ticks = height / 30;\n        }\n      } catch (ex) {\n        throw (ex);\n      }\n    }\n    return spec;\n  }\n\n  /**\n   * TOOLTIP LOGIC HERE\n   *\n   * Instantiates the tooltip element and styling\n   * @access private\n   */\n  _createTooltip (elem) {\n    let tooltipDiv = document.getElementById(elem);\n\n    // Check if tooltip has been created or not...\n    if (tooltipDiv) {\n      return tooltipDiv;\n    }\n\n    // TODO: remove inline CSS\n    let style = document.createElement('style');\n    style.type = 'text/css';\n    style.innerHTML = '.cedar-tooltip {background-color: white; padding: 3px 10px; color: #333; margin: -30px 0 0 20px; position: absolute; z-index: 2000; font-size: 10px; border: 1px solid #BBB;} .cedar-tooltip .title {font-size: 13pt; font-weight: bold; } .cedar-tooltip .content {font-size: 10pt; } ';\n    document.getElementsByTagName('head')[0].appendChild(style);\n\n    tooltipDiv = document.createElement('div');\n    tooltipDiv.className = 'cedar-tooltip';\n    tooltipDiv.id = elem;\n    tooltipDiv.cssText = 'display: none';\n    // We need tooltip at the top of the page\n    document.body.insertBefore(tooltipDiv, document.body.firstChild);\n\n    this.on('mouseout', (event, data) => {\n      this._updateTooltip(event, null);\n    });\n    this.on('mousemove', (event, data) => {\n      this._updateTooltip(event, data);\n    });\n    return tooltipDiv;\n  }\n\n  /**\n   * Places the tooltipe and fills in content\n   *\n   * @access private\n   */\n  _updateTooltip (event, data) {\n    let cedartip = document.getElementById(this._definition.tooltip.id);\n    if (!data) {\n      cedartip.style.display = 'none';\n      return;\n    }\n    cedartip.style.top = `${event.pageY}px`;\n    cedartip.style.left = `${event.pageX}px`;\n    cedartip.style.display = 'block';\n\n    let content = `<span class='title'>${this._definition.tooltip.title}</span><br />`;\n    content += `<p class='content'>${this._definition.tooltip.content}</p>`;\n\n    cedartip.innerHTML = content.replace(/\\{(\\w+)\\}/g, (match, $1) => {\n      return data[$1];\n    });\n  }\n\n   /**\n    * EVENT LOGIC HERE\n    *\n    *\n    * Add a handler for the named event.\n    * Events:\n    *  - mouseover\n    *  - mouseout\n    *  - click\n    *  - update-start\n    *  - update-end\n    *\n    *\n    *\n    * Callback from Cedar events\n    *  - callback Cedar~eventCallback\n    *  - param {Object} event - event response such as mouse location\n    *  - param {Object} data - chart data object\n    *\n    * @example\n    * var chart = new Cedar({ ... });\n    * chart.on('mouseover', function(event, data) {\n    *   console.log(\"Mouse Location:\", [event.offsetX, event.offsetY]);\n    *   console.log(\"Data value:\", data[Object.keys(data)[0]]);\n    * });\n    *\n    * @param {String} eventName name of the event that invokes callback\n    * @param {Cedar~eventCallback} callback - The callback that handles the event.\n    */\n  on (evtName, callback) {\n    this._events.push({type: evtName, callback});\n  }\n  /**\n   * Remove a hanlder for the named event\n   */\n  off (evtName, callback) {\n    this._events.forEach((registeredEvent, index, object) => {\n      if (registeredEvent.type === evtName && registeredEvent.callback === callback) {\n        object.splice(index, 1);\n      }\n    });\n  }\n\n  /**\n   * Trigger a callback\n   * @param {string} eventName - [\"mouseover\",\"mouseout\",\"click\",\"update-start\",\"update-end\"]\n   */\n  emit (eventName) {\n    if (!!this._view._handler._handlers[ eventName ] && !!this._view._handler._handlers[ eventName ][0]) {\n      this._view._handler._handlers[ eventName ][0].handler();\n    }\n  }\n\n  /**\n   * Attach the generic proxy hanlders to the chart view\n   * @access private\n   */\n  _attach (view) {\n    view.on('mouseover', this._handler('mouseover'));\n    view.on('mouseout', this._handler('mouseout'));\n    view.on('mousemove', this._handler('mousemove'));\n    view.on('click', this._handler('click'));\n    view.on('update-start', this._handler('update-start'));\n    view.on('update-end', this._handler('update-end'));\n  }\n\n  /**\n   * Remove all event handlers from the view\n   * @access private\n   */\n  _remove (view) {\n    view.off('mouseover');\n    view.off('mouseout');\n    view.off('mousemove');\n    view.off('click');\n    view.off('update-start');\n    view.off('update-end');\n  }\n\n  /**\n   * Creates an entry in the method queue, executed\n   * once a pending xhr is completed\n   * @access private\n   */\n  _addToMethodQueue (name, args) {\n    this._methodQueue.push({ method: name, args: args });\n  }\n\n  /**\n   * empties the method queue by calling the queued methods\n   * This helps build a more syncronous api, while still\n   * doing async things in the code\n   * @access private\n   */\n  _purgeMethodQueue () {\n    if (this._methodQueue.length > 0) {\n      this._methodQueue.forEach((action, index) => {\n        this[action.method].apply(this, action.args);\n      });\n    }\n  }\n\n  /**\n   * Generic event handler proxy\n   * @access private\n   */\n  _handler (evtName) {\n    // return a handler function w/ the events hash closed over\n    const handler = (evt, item) => {\n      this._events.forEach((registeredHandler) => {\n        if (registeredHandler.type === evtName) {\n          // invoke the callback with the data\n          if (item) {\n            registeredHandler.callback(evt, item.datum.attributes);\n          } else {\n            registeredHandler.callback(evt, null);\n          }\n        }\n      });\n    };\n    return handler;\n  }\n\n  /**\n   * SELECT LOGIC STARTS HERE\n   *\n   * Highlight marker based on attribute value\n   *\n   * @example\n   * chart = new Cedar({...});\n   * chart.select({key: 'ZIP_CODE', value: '20002'});\n   *\n   * @param {object} options - Object(key, value) to match. Calls hover on work\n   * @returns {Array} items - array of chart objects that match the criteria\n   */\n\n  select (options) {\n    let view = this._view;\n    let items = view.model().scene().items[0].items[0].items;\n\n    items.forEach((item) => {\n      if (item.datum.attributes[options.key] === options.value) {\n        if (item.hasPropertySet('hover')) {\n          this._view.update({props: 'hover', items: item});\n        }\n      }\n    });\n\n    return items;\n  }\n\n   /**\n    * Removes highlighted chart items\n    *\n    * If \"options\" are used, only clear specific items, otherwise clears all highlights.\n    * @param {Object} options - Object(key, value) to match. Calls hover on mark\n    * @returns {Array} items - array of chart objects that match the criteria, or null if all items.\n    */\n\n  clearSelection (options) {\n    let view = this._view;\n\n    if (!!options && !!options.key) {\n      let items = view.model().scene().items[0].items[0].items;\n      items.forEach((item) => {\n        if (item.datum.attributes[options.key] === options.value) {\n          this._view.update({props: 'update', items: item});\n        }\n      });\n      return items;\n    } else {\n      // clear all\n      this._view.update();\n      return null;\n    }\n  }\n\n  static getJson (url, callback, timeout) {\n    return requestUtils.getJson(url, callback, timeout);\n  }\n\n  /**\n   * Other now exposed utils!\n   */\n  static _validateMappings (inputs, mappings) {\n    return utils.validateMappings(inputs, mappings);\n  }\n  static _validateData (data, mappings) {\n    return utils.validateData(data, mappings);\n  }\n  static _createFeatureServiceRequest (dataset, queryFromSpec) {\n    return requestUtils.createFeatureServiceRequest(dataset, queryFromSpec);\n  }\n  static _getMappingFieldName (mappingName, fieldName) {\n    return utils.getMappingFieldName(mappingName, fieldName);\n  }\n}\n"],"names":["mixin","source","let","args","i","length","d3.entries","forEach","p","key","value","mergeRecursive","obj1","obj2","hasOwnProperty","constructor","Object","Array","e","supplant","template","params","const","t","replace","a","b","r","getTokenValue","JSON","stringify","tokens","tokenName","tmpTokens","tokenNameParts","split","validateMappings","inputs","mappings","filter","input","required","name","validateData","data","missingInputs","features","isArray","Error","firstRow","attributes","fld","getMappingFieldName","field","push","mappingName","fieldName","defaultDefinition","dataset","query","defaultQuery","where","returnGeometry","returnDistinctValues","returnIdsOnly","returnCountOnly","outFields","sqlFormat","f","applyDefaultsToMappings","errs","join","serializeQueryParams","str","param","val","encodeURIComponent","queryString","getJson","url","callback","timeout","cb","err","response","parse","responseText","uri","d3.xhr","on","xhr","ontimeout","onload","header","post","get","createFeatureServiceRequest","queryFromSpec","mergedQuery","bbox","geometry","bboxArr","xmin","ymin","xmax","ymax","inSR","groupByFieldsForStatistics","group","outStatistics","count","orderByFields","statisticType","onStatisticField","outStatisticFieldName","sort","token","utils","specUtils","requestUtils","baseUrl","src","cdnProtocol","cdnUrl","window","document","currentScript","substr","lastIndexOf","location","protocol","Cedar","options","this","version","spec","opts","chartTypes","width","undefined","height","autolabels","maxLabelLength","_events","_definition","_view","_tooltip","_transform","_methodQueue","_timeout","_pendingXhr","definition","this$1","_purgeMethodQueue","override","_getSpecificationUrl","type","specification","tooltip","title","content","transform","prototypeAccessors","id","Date","now","indexOf","canDraw","drawable","show","clb","_addToMethodQueue","elementId","d3.select","_elementId","_renderer","renderer","_token","chk","issues","update","emit","_remove","_createTooltip","compiledMappings","values","_renderSpec","error","message","details","ex","_placeLabels","_placeaAxisTicks","vg.parse","chartCtor","el","parseInt","style","_attach","fields","lengths","feature","axis","toString","index","angle","axes","properties","labels","text","titleOffset","Math","abs","ticks","elem","tooltipDiv","getElementById","createElement","innerHTML","getElementsByTagName","appendChild","className","cssText","body","insertBefore","firstChild","event","_updateTooltip","cedartip","display","top","left","match","$1","evtName","off","registeredEvent","object","splice","eventName","_handler","_handlers","handler","view","method","action","apply","evt","item","registeredHandler","datum","select","items","model","scene","hasPropertySet","props","clearSelection","_validateMappings","_validateData","_createFeatureServiceRequest","_getMappingFieldName"],"mappings":"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"}